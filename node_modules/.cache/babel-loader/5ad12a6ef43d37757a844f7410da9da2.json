{"ast":null,"code":"function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nimport { _breakpoint, _map } from './core';\nvar defaultBreakpoints = {\n  mobile: 0,\n  // targeting all devices\n  tablet: 737,\n  // targeting devices that are LARGER than the iPhone 6 Plus (which is 736px in landscape mode)\n  desktop: 1025 // targeting devices that are LARGER than the iPad (which is 1024px in landscape mode)\n\n};\n\nfunction breakpoint(gte, lt) {\n  return function (strings) {\n    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      interpolations[_key - 1] = arguments[_key];\n    }\n\n    return function (_ref) {\n      var _ref$theme = _ref.theme,\n          theme = _ref$theme === undefined ? {} : _ref$theme;\n      return _breakpoint(theme.breakpoints || defaultBreakpoints, gte, lt).apply(undefined, [strings].concat(_toConsumableArray(interpolations)));\n    };\n  };\n}\n\nexport function map(value, mapValueToCSS) {\n  return function (_ref2) {\n    var _ref2$theme = _ref2.theme,\n        theme = _ref2$theme === undefined ? {} : _ref2$theme;\n    return _map(theme.breakpoints || defaultBreakpoints, value, mapValueToCSS);\n  };\n}\nexport function createStatic() {\n  var breakpoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultBreakpoints;\n  return Object.keys(breakpoints).reduce(function (accum, name) {\n    accum[name] = _breakpoint(breakpoints, name);\n    return accum;\n  }, {\n    breakpoint: function breakpoint(gte, lt) {\n      return _breakpoint(breakpoints, gte, lt);\n    },\n    map: function map(value, mapValueToCSS) {\n      return _map(breakpoints, value, mapValueToCSS);\n    }\n  });\n}\nexport default breakpoint;","map":{"version":3,"sources":["/home/kilberty/softcom/node_modules/styled-components-breakpoint/dist/esm/index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_breakpoint","_map","defaultBreakpoints","mobile","tablet","desktop","breakpoint","gte","lt","strings","_len","arguments","interpolations","_key","_ref","_ref$theme","theme","undefined","breakpoints","apply","concat","map","value","mapValueToCSS","_ref2","_ref2$theme","createStatic","Object","keys","reduce","accum","name"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport { _breakpoint, _map } from './core';\n\nvar defaultBreakpoints = {\n  mobile: 0, // targeting all devices\n  tablet: 737, // targeting devices that are LARGER than the iPhone 6 Plus (which is 736px in landscape mode)\n  desktop: 1025 // targeting devices that are LARGER than the iPad (which is 1024px in landscape mode)\n};\n\nfunction breakpoint(gte, lt) {\n  return function (strings) {\n    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      interpolations[_key - 1] = arguments[_key];\n    }\n\n    return function (_ref) {\n      var _ref$theme = _ref.theme,\n          theme = _ref$theme === undefined ? {} : _ref$theme;\n\n      return _breakpoint(theme.breakpoints || defaultBreakpoints, gte, lt).apply(undefined, [strings].concat(_toConsumableArray(interpolations)));\n    };\n  };\n}\n\nexport function map(value, mapValueToCSS) {\n  return function (_ref2) {\n    var _ref2$theme = _ref2.theme,\n        theme = _ref2$theme === undefined ? {} : _ref2$theme;\n\n    return _map(theme.breakpoints || defaultBreakpoints, value, mapValueToCSS);\n  };\n}\n\nexport function createStatic() {\n  var breakpoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultBreakpoints;\n\n  return Object.keys(breakpoints).reduce(function (accum, name) {\n    accum[name] = _breakpoint(breakpoints, name);\n    return accum;\n  }, {\n    breakpoint: function breakpoint(gte, lt) {\n      return _breakpoint(breakpoints, gte, lt);\n    },\n    map: function map(value, mapValueToCSS) {\n      return _map(breakpoints, value, mapValueToCSS);\n    }\n  });\n}\n\nexport default breakpoint;"]},"metadata":{},"sourceType":"module"}
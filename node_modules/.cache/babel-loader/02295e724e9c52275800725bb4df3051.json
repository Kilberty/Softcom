{"ast":null,"code":"var fs = require('fs');\n\nvar _ = require('lodash');\n\nvar file = require('file');\n\nvar jsdoc = require('doctrine');\n\nvar srcRoot = fs.realpathSync(__dirname + '/../src');\nvar commentRE = /^(\\s+)?(\\/\\*)?\\*(\\/)?\\s?/mg;\nvar jsdocRE = /[^\\S\\r\\n]*\\/(?:\\*{2})([\\W\\w]+?)\\*\\//mg;\n\nvar stripComments = function (str) {\n  return str.replace(commentRE, '');\n};\n\nfunction options(cb, allMetadata) {\n  var opts;\n  file.walkSync(srcRoot, function (start, dirs, files) {\n    opts = _.chain(files).map(function (file) {\n      var srcFile = fs.readFileSync(start + '/' + file, 'utf8');\n      var docs = srcFile.match(jsdocRE);\n\n      if (docs) {\n        docs = docs.map(stripComments).map(function (str) {\n          return jsdoc.parse(str, {\n            sloppy: true,\n            tags: ['access', 'author', 'class', 'example', 'function', 'memberOf', 'name', 'optionName', 'optionProp', 'param', 'params', 'preserve', 'private', 'returns', 'type']\n          });\n        });\n\n        var option = _.chain(docs).flatten().filter(function (doc) {\n          if (allMetadata) {\n            return true;\n          } else {\n            return doc && _.some(doc.tags, {\n              title: 'optionName'\n            });\n          }\n        }).map(function (opt) {\n          if (allMetadata) {\n            return opt;\n          } else {\n            var tags = opt.tags.filter(function (tag) {\n              return tag.title.indexOf('option') === 0;\n            });\n            return {\n              name: _.filter(tags, {\n                title: 'optionName'\n              })[0].description,\n              property: _.filter(tags, {\n                title: 'optionProp'\n              })[0].description\n            };\n          }\n        }).value();\n\n        return option;\n      }\n    }).filter(function (doc) {\n      return doc && doc.length;\n    }).flatten().value();\n  });\n\n  if (cb) {\n    cb(opts);\n  }\n\n  return opts;\n}\n\nmodule.exports = options;","map":{"version":3,"sources":["/home/kilberty/softcom/node_modules/modernizr/lib/options.js"],"names":["fs","require","_","file","jsdoc","srcRoot","realpathSync","__dirname","commentRE","jsdocRE","stripComments","str","replace","options","cb","allMetadata","opts","walkSync","start","dirs","files","chain","map","srcFile","readFileSync","docs","match","parse","sloppy","tags","option","flatten","filter","doc","some","title","opt","tag","indexOf","name","description","property","value","length","module","exports"],"mappings":"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","sourcesContent":["var fs = require('fs');\nvar _ = require('lodash');\nvar file = require('file');\nvar jsdoc = require('doctrine');\nvar srcRoot = fs.realpathSync(__dirname + '/../src');\nvar commentRE = /^(\\s+)?(\\/\\*)?\\*(\\/)?\\s?/mg;\nvar jsdocRE = /[^\\S\\r\\n]*\\/(?:\\*{2})([\\W\\w]+?)\\*\\//mg;\n\nvar stripComments = function(str) {\n  return str.replace(commentRE, '');\n};\n\nfunction options(cb, allMetadata) {\n  var opts;\n\n  file.walkSync(srcRoot, function(start, dirs, files) {\n    opts = _.chain(files)\n      .map(function(file) {\n        var srcFile = fs.readFileSync(start + '/' + file, 'utf8');\n        var docs = srcFile.match(jsdocRE);\n\n        if (docs) {\n          docs = docs\n            .map(stripComments)\n            .map(function(str) {\n              return jsdoc.parse(str, {\n                sloppy: true,\n                tags: [\n                  'access',\n                  'author',\n                  'class',\n                  'example',\n                  'function',\n                  'memberOf',\n                  'name',\n                  'optionName',\n                  'optionProp',\n                  'param',\n                  'params',\n                  'preserve',\n                  'private',\n                  'returns',\n                  'type'\n                ]\n              });\n            });\n\n          var option = _.chain(docs)\n            .flatten()\n            .filter(function(doc) {\n              if (allMetadata) {\n                return true;\n              } else {\n                return doc && _.some(doc.tags, {title: 'optionName'});\n              }\n            })\n            .map(function(opt) {\n              if (allMetadata) {\n                return opt;\n              } else {\n                var tags = opt.tags.filter(function(tag) {\n                  return tag.title.indexOf('option') === 0;\n                });\n\n                return {\n                  name: _.filter(tags, {title: 'optionName'})[0].description,\n                  property: _.filter(tags, {title: 'optionProp'})[0].description\n                };\n              }\n            })\n            .value();\n\n          return option;\n        }\n      })\n      .filter(function(doc) {\n        return doc && doc.length;\n      })\n      .flatten()\n      .value();\n  });\n\n  if (cb) {\n    cb(opts);\n  }\n\n  return opts;\n}\n\nmodule.exports = options;\n"]},"metadata":{},"sourceType":"script"}
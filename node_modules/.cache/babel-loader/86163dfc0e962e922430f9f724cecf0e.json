{"ast":null,"code":"var _templateObject = _taggedTemplateLiteral(['\\n    box-sizing: border-box;\\n    ', ' ', ';\\n  '], ['\\n    box-sizing: border-box;\\n    ', ' ', ';\\n  ']);\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n/* eslint-disable no-shadow */\n\n\nimport { css } from 'styled-components';\nimport { map } from 'styled-components-breakpoint';\nimport '../types';\n\nfunction size(_ref) {\n  var size = _ref.size;\n  return map(size, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    switch (value) {\n      case 'min':\n        return '\\n          flex-grow: 0;\\n          flex-basis: auto;\\n          width: auto;\\n          max-width: none;\\n        ';\n\n      case 'max':\n        return '\\n          flex-grow: 1;\\n          flex-basis: auto;\\n          width: auto;\\n          max-width: none;\\n          max-width: 100%; /* TODO: does this always work as expected? */\\n        ';\n\n      default:\n        {\n          var pct = Math.round((typeof value === 'number' ? value : 1) * 100 * 10000) / 10000; //round to 4 decimal places\n\n          return '\\n          flex-basis: ' + pct + '%;\\n          max-width: ' + pct + '%;\\n        ';\n        }\n    }\n  });\n}\n\nfunction visible(_ref2) {\n  var visible = _ref2.visible; //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n\n  if (typeof visible === 'undefined') {\n    return '';\n  }\n\n  return map(visible, function (value) {\n    if (value === false) {\n      return 'display: none;';\n    } else {\n      return 'display: flex;';\n      /* TODO: does this always work as expected? */\n    }\n  });\n}\n\nexport default function (props) {\n  return css(_templateObject, size(props), visible(props));\n}","map":{"version":3,"sources":["/home/kilberty/softcom/node_modules/styled-components-grid/dist/esm/mixins/gridUnit.js"],"names":["_templateObject","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","css","map","size","_ref","arguments","length","undefined","pct","Math","round","visible","_ref2","props"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,sBAAsB,CAAC,CAAC,qCAAD,EAAwC,GAAxC,EAA6C,OAA7C,CAAD,EAAwD,CAAC,qCAAD,EAAwC,GAAxC,EAA6C,OAA7C,CAAxD,CAA5C;;AAEA,SAASA,sBAAT,CAAgCC,OAAhC,EAAyCC,GAAzC,EAA8C;AAAE,SAAOC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,gBAAP,CAAwBJ,OAAxB,EAAiC;AAAEC,IAAAA,GAAG,EAAE;AAAEI,MAAAA,KAAK,EAAEH,MAAM,CAACC,MAAP,CAAcF,GAAd;AAAT;AAAP,GAAjC,CAAd,CAAP;AAAiG;AAEjJ;;;AACA,SAASK,GAAT,QAAoB,mBAApB;AACA,SAASC,GAAT,QAAoB,8BAApB;AACA,OAAO,UAAP;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAClB,MAAID,IAAI,GAAGC,IAAI,CAACD,IAAhB;AAEA,SAAOD,GAAG,CAACC,IAAD,EAAO,YAAY;AAC3B,QAAIH,KAAK,GAAGK,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAhF;;AAEA,YAAQL,KAAR;AACE,WAAK,KAAL;AACE,eAAO,sHAAP;;AAEF,WAAK,KAAL;AACE,eAAO,iMAAP;;AAEF;AACE;AACE,cAAIQ,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAC,OAAOV,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,CAArC,IAA0C,GAA1C,GAAgD,KAA3D,IAAoE,KAA9E,CADF,CACuF;;AACrF,iBAAO,6BAA6BQ,GAA7B,GAAmC,2BAAnC,GAAiEA,GAAjE,GAAuE,cAA9E;AACD;AAXL;AAaD,GAhBS,CAAV;AAiBD;;AAED,SAASG,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAID,OAAO,GAAGC,KAAK,CAACD,OAApB,CADsB,CAGtB;;AACA,MAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AAClC,WAAO,EAAP;AACD;;AAED,SAAOT,GAAG,CAACS,OAAD,EAAU,UAAUX,KAAV,EAAiB;AACnC,QAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB,aAAO,gBAAP;AACD,KAFD,MAEO;AACL,aAAO,gBAAP;AAAyB;AAC1B;AACF,GANS,CAAV;AAOD;;AAED,eAAe,UAAUa,KAAV,EAAiB;AAC9B,SAAOZ,GAAG,CAACR,eAAD,EAAkBU,IAAI,CAACU,KAAD,CAAtB,EAA+BF,OAAO,CAACE,KAAD,CAAtC,CAAV;AACD","sourcesContent":["var _templateObject = _taggedTemplateLiteral(['\\n    box-sizing: border-box;\\n    ', ' ', ';\\n  '], ['\\n    box-sizing: border-box;\\n    ', ' ', ';\\n  ']);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/* eslint-disable no-shadow */\nimport { css } from 'styled-components';\nimport { map } from 'styled-components-breakpoint';\nimport '../types';\n\nfunction size(_ref) {\n  var size = _ref.size;\n\n  return map(size, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    switch (value) {\n      case 'min':\n        return '\\n          flex-grow: 0;\\n          flex-basis: auto;\\n          width: auto;\\n          max-width: none;\\n        ';\n\n      case 'max':\n        return '\\n          flex-grow: 1;\\n          flex-basis: auto;\\n          width: auto;\\n          max-width: none;\\n          max-width: 100%; /* TODO: does this always work as expected? */\\n        ';\n\n      default:\n        {\n          var pct = Math.round((typeof value === 'number' ? value : 1) * 100 * 10000) / 10000; //round to 4 decimal places\n          return '\\n          flex-basis: ' + pct + '%;\\n          max-width: ' + pct + '%;\\n        ';\n        }\n    }\n  });\n}\n\nfunction visible(_ref2) {\n  var visible = _ref2.visible;\n\n  //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n  if (typeof visible === 'undefined') {\n    return '';\n  }\n\n  return map(visible, function (value) {\n    if (value === false) {\n      return 'display: none;';\n    } else {\n      return 'display: flex;'; /* TODO: does this always work as expected? */\n    }\n  });\n}\n\nexport default function (props) {\n  return css(_templateObject, size(props), visible(props));\n}"]},"metadata":{},"sourceType":"module"}